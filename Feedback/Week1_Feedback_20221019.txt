Starting code feedback for Aditi, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 3.03 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: week2, week3, .git, week1, Feedback

Found the following files in parent directory: .gitignore, README.md

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:

**********************************************************************
*~
*.tmp
*.pdf
*.log

**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
## My CMEE Coursework Repository

This GitHub repository has coursework and code for the work done during MRes in CMEE. Every week has a different folder and it contains sub-folders containing the code, data and results. 

### Week 1
Week one covers the basics of the Unix environment and shell scripting. The OS used for this course is Ubuntu 22.04 LTS. For the shell scripting, the bash shell is used. The scripts and code are present in the code directory and the data is availabe in the data directory.

### Week 2
Week two covers the basics of Python. Python version  is used for this course. Alonf with this, Visual Studio Code is the IDE used.

### Week 3
Week 3 covers the basics of R. R vesion 4.1.2 ('Bird Hippie') is used. 
**********************************************************************

======================================================================
Looking for the weekly directories...

Found 3 weekly directories: week1, week2, week3

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: code, sandbox, data, results

Found the following files: README.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# Week 1

### This docments outlines the contents of week 1

'week1' contains four directories namely 'code', 'data', 'results, 'sandbox'.

#### Code
This directory contains all shell scripts and files containing code which are required for submission. All the scripts have to be called using this directory as the present working directory. The following s a short description of the files present in this directory:

* UnixPrac1.txt: Contains all the commands required for the FASTA exercies. All the commands are one liners. 
* boilerplate.sh: First shell script written to understand the basic syntax. Needs no input.
* CompileLaTex.sh: Compiles .tex files into .pdf. Requires a .tex file as an input.
* ConcatenateTwoFiles.sh: Merges the two input files into a single output file. Requires three inputs (two input files and one putput file).
* CountLines.sh: Counts and prints the number of lines in the file. Requires a file as input.
* csvtospace.sh: Substitutes all the commas for spaces and saves the output to a .txt file. Requires a .csv file as input. If no input is provided it uses default inputs.
* MyExampleScript.sh: An example script to understand bash code. Needs no input
* tabtocsv.sh: Substitute all the tabs for commas. Saves the output to a .csv file. Requires a tab separated .txt file.
* tiff2png.sh: Converts a .tiff image to .png image. Requires a .tiff image as input.
* variables.sh: Basic script to learn about variables in shell scripting. Needs no input

#### Data
This directory has all the data required by the scripts. It also contains a sample '.tiff' file for conversion from .tiff to .png. The deafult data used for 'csvtospace.sh' is in a sub-directory called Temperatures. 

#### Results
This directory id empty presently. After running all the scripts it is expected to contain the results given by the scripts.

#### Sandbox
This directory is for practice and contains practice scripts and files. On GitHub it is empty as it is not meant for submission. 
**********************************************************************

Results directory is empty - good! 

Found 12 code files: ConcatenateTwoFiles.sh, CountLines.sh, FirstExample.tex, variables.sh, boilerplate.sh, tiff2png.sh, CompileLaTeX.sh, MyExampleScript.sh, tabtocsv.sh, csvtospace.sh, UnixPrac1.txt, FirstBiblio.bib

======================================================================
Testing script/code files...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:

**********************************************************************
#!/bin/bash

#Author: Aditi Madkaikar arm122@ic.ac.uk
#Script: ConcatenateTwoFiles.sh
#Descripton: Merges the two input files
#Arguements: 3 -> Text files
#Date: Oct 2022

if test -z "$1" || test -z "$2" || test -z "$3"; then 
    echo "Please give a valid input. This script needs three text files as inputs (two input files and one outout)"
else
    echo "It works: $1 $2"
    cat $1 > $3
    cat $2 >> $3
    echo "Merged File is"
    cat $3
    echo "Whee it works!"
fi
exit

**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 


**********************************************************************
Please give a valid input. This script needs three text files as inputs (two input files and one outout)

**********************************************************************

Code ran without errors

Time consumed = 0.00483s

======================================================================
Inspecting script file CountLines.sh...

File contents are:

**********************************************************************
#!/bin/bash

#Author: Aditi Madkaikar arm122@ic.ac.uk
#Script: CountLines.sh
#Descripton: Counts and prints the number of lines in the file
#Arguements: 1 -> Any file
#Date: Oct 2022

NumLines=`wc -l < $1`
echo "The files $1 has $NumLines lines"
echo

**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 


**********************************************************************
The files  has  lines


**********************************************************************

Encountered error (or warning):
CountLines.sh: line 9: $1: ambiguous redirect

======================================================================
Inspecting script file FirstExample.tex...

File contents are:

**********************************************************************
\documentclass[12pt]{article}

\title{A Simple Document}

\author{Aditi Madkaikar}

\date{Oct 6, 2022}

\begin{document}
    \maketitle

    \begin{abstract}
            This paper analyzes a seminal equation in population biology
    \end{abstract}

    \section{Introduction}
        Blah Blah
    
    \section{Materials \& Methods}
        A foundational equation of population biology is:
    
        \begin{equation}
            \frac{dN}{dt} = r N (1 - \frac{N}{K})
        \end{equation}
        
        This was first proposed by verhulst in 1838 \cite{verhulst1838notice}.

        \bibliographystyle{plain}

        \bibliography{FirstBiblio}
        
    \end{document}
    
**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file variables.sh...

File contents are:

**********************************************************************
#!/bin/bash

#Author: Aditi Madkaikar arm122@ic.ac.uk
#Script: tabtocsv.sh
#Descripton: Basic script to learn about variables in shell scripting
#Arguements: None
#Date: Oct 2022

##Illustrates the use of variables

#Special variables

echo "The script was called with $# parameters"
echo "The script's name is $0"
echo "The arguements are $@"
echo "The first arguement is $1"
echo "The second arguement is $2"

#Assigned variables
MY_VAR='Why not print this'

echo "The current value of this string is:" $MY_VAR
echo
echo "Please enter a new value:"
read MY_VAR
echo
echo "The current value of the variable is:" $MY_VAR
echo

#Assigned variables; Explicit declration

MY_VAR="some string"
echo "The current value of the variable is:" $MY_VAR
echo
read MY_VAR
echo
echo "The current value of the variable is:" $MY_VAR
echo

## Assigned VAriables; Reading(multiple values) from user input:

echo "Enter two number separated by space(s)"
read a b 
echo
echo "you entered" $a "and" $b "; Their sum is:"

##Assigned variables; Command substitution
MY_SUM=$(expr $a + $b)
echo $MY_SUM
**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 


**********************************************************************
The script was called with 0 parameters
The script's name is variables.sh
The arguements are 
The first arguement is 
The second arguement is 
The current value of this string is: Why not print this

Please enter a new value:

The current value of the variable is:

The current value of the variable is: some string


The current value of the variable is:

Enter two number separated by space(s)

you entered and ; Their sum is:


**********************************************************************

Encountered error (or warning):
expr: syntax error: missing argument after ‘+’

======================================================================
Inspecting script file boilerplate.sh...

File contents are:

**********************************************************************
#!/bin/bash

#Author: Aditi Madkaikar arm122@ic.ac.uk
#Script: boilerplate.sh
#Descripton: First shell script
#Arguements: None
#Date: Oct 2022

echo -e "\nThis is a shell script"

#exit

**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 


**********************************************************************

This is a shell script

**********************************************************************

Code ran without errors

Time consumed = 0.00749s

======================================================================
Inspecting script file tiff2png.sh...

File contents are:

**********************************************************************
#!/bin/bash

#Author: Aditi Madkaikar arm122@ic.ac.uk
#Script: tabtocsv.sh
#Descripton: Converts a .tiff image to .png image
#Arguements: 1 -> Directory containing a .tiff image or a .tiff image
#Date: Oct 2022

#echo $1
# Loking for and isolating .tiff files from a directory.
MY_VAR=$(find $1 -type f -name "*.tiff")
#echo "$MY_VAR"
if test -z $MY_VAR; then
    echo "No .tiff image file available. Please give a valid input"
    exit
fi

for f in $MY_VAR; 
    do  
        echo "Converting $f"; 
        convert "$f"  "../results/$(basename "$f" .tiff).png"; 
    done

exit
**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 


**********************************************************************
No .tiff image file available. Please give a valid input

**********************************************************************

Code ran without errors

Time consumed = 0.00942s

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:

**********************************************************************
#!/bin/bash

#Author: Aditi Madkaikar arm122@ic.ac.uk
#Script: CompileLaTeX.sh
#Descripton: Compiles .tex files into .pdf
#Arguements: 1 -> Filename of the .tex form ideally without the .tex suffix
#Date: Oct 2022


if [[ $1 =~ .*tex.* ]]; then
    #echo "Please input a '.tex' file"
    pdflatex $1
    bibtex $(basename "$1" .tex)
    pdflatex $1
    pdflatex $1
    evince $(basename "$1" .tex).pdf
else
    echo -n "Please enter a .tex file with the .tex extension (eg: MyExample.tex should be entered as MyExample.tex): "
    read in_file
    echo "$in_file"
    if [[ $in_file =~ .*tex.* ]]; then
      echo "Please input a '.tex' file"
      pdflatex $in_file
      bibtex $(basename "$in_file" .tex)
      pdflatex $in_file
      pdflatex $in_file
      evince $(basename "$in_file" .tex).pdf
    else
      echo "Enter a valid input"
      exit
    fi
fi

#Cleanup

rm *.aux
rm *.log
rm *.bbl
rm *.blg

exit

**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 


**********************************************************************
Please enter a .tex file with the .tex extension (eg: MyExample.tex should be entered as MyExample.tex): 
Enter a valid input

**********************************************************************

Code ran without errors

Time consumed = 0.00745s

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:

**********************************************************************
#!/bin/bash

#Author: Aditi Madkaikar arm122@ic.ac.uk
#Script: tabtocsv.sh
#Descripton: Example script
#Arguements: None 
#Date: Oct 2022

MSG1="Hello!"
MSG2=$USER

echo "$MSG1 $MSG2"
echo "Hello $USER"
echo

**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 


**********************************************************************
Hello! mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00500s

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:

**********************************************************************
#!/bin/bash

#Author: Aditi Madkaikar arm122@ic.ac.uk
#Script: tabtocsv.sh
#Descripton: substitute all the tabs for commas. Saves the output to a .csv file
#Arguements: 1 -> tab delimited file
#Date: Oct 2022

# Checking for valid inputs
if [[ $1 =~ .*txt.* ]]; then 
    echo "It works: $1"
    echo  "Creating a comma delimited version of $1 ..."
    cat $1 | tr -s "\t" "," >> "../results/$(basename "$1" .txt).csv"
    echo "Done!"

else
    echo "Please give a valid input. It should be a tab deliminated .txt file."
    exit
fi
exit

**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 


**********************************************************************
Please give a valid input. It should be a tab deliminated .txt file.

**********************************************************************

Code ran without errors

Time consumed = 0.00556s

======================================================================
Inspecting script file csvtospace.sh...

File contents are:

**********************************************************************
#!/bin/bash

#Author: Aditi Madkaikar arm122@ic.ac.uk
#Script: tabtocsv.sh
#Descripton: substitute all the commas for spaces and saves the output to a .txt file
#Arguements: None
#Date: Oct 2022

# Finding the .csv files
MY_VAR=$(find $1 -type f -name "*.csv")
#echo "$MY_VAR"
if test -z $MY_VAR; then
    echo "No .csv file available. "
    echo "Continuing with default values"
    MY_VAR=../data/Temperatures
    MY_VAR=$(find $MY_VAR -type f -name "*.csv")
fi

echo $MY_VAR

for f in $MY_VAR; 
    do  
        echo "Creating a space delimited version of $f"; 
        cat $f | tr -s "," " " >> "../results/$(basename "$f" .csv).txt"
        echo "Done!"
    done

exit
**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 


**********************************************************************
No .csv file available. 
Continuing with default values
../data/Temperatures/1803.csv ../data/Temperatures/1802.csv ../data/Temperatures/1801.csv ../data/Temperatures/1800.csv
Creating a space delimited version of ../data/Temperatures/1803.csv
Done!
Creating a space delimited version of ../data/Temperatures/1802.csv
Done!
Creating a space delimited version of ../data/Temperatures/1801.csv
Done!
Creating a space delimited version of ../data/Temperatures/1800.csv
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.03223s

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:

**********************************************************************
#Practical for UNIX and Linux

#1 counting and printing the number of lines in each file.
find ../data -type f -name "*.fasta" -exec wc -l {} \;

#2 Printing all lines after the first line in E-coli. Removing all the '\n' characters as well.
awk '(NR>1)' ../data/E.coli.fasta | tr -d "\n"

#3 Building on the previous command to find the sequence length of the genome. 
awk '(NR>1)' ../data/E.coli.fasta | tr -d "\n" | wc -c

#4 Building on the previous command to count of ATGC Sequences.
awk '(NR>1)' ../data/E.coli.fasta | tr -d "\n" | grep -o "ATGC" | wc -l

#5 Building on the previous command to calculate the value of (A + T)/(G +C). Result of Chargaff's rule.
awk '(NR>1)' ../data/E.coli.fasta | tr -d "\n"  >> ../data/new_file.fasta && a=$(cat ../data/new_file.fasta | grep -o 'A\|T' | wc -l) && b=$(cat ../data/new_file.fasta | grep -o 'G\|C' | wc -l) && echo $a / $b | bc -l
**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:

**********************************************************************
@article{verhulst1838notice,
  title={Notice sur la loi que la population suit dans son accroissement},
  author={Verhulst, Pierre-Fran{\c{c}}ois},
  journal={Corresp. Math. Phys.},
  volume={10},
  pages={113--126},
  year={1838}
}

**********************************************************************

Testing FirstBiblio.bib...

======================================================================
======================================================================
Finished running scripts

Ran into 2 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 100

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!